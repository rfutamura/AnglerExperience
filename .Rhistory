filter(Species!="NA")%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03"))) #exclude days with same hook
################ statistical analysis #############################
#table of the species composition
table(Species_data$Fishing_category,Species_data$Species)
#chi-square tests to test the annual difference in species composition
chisq.test(table(Species_data$Fishing_category,
Species_data$Species))
367/554
949/1433
##descriptive data on CPUE
#by angler experience
Angling_CPUE_data %>%
group_by(Fishing_category)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
#by angler experience
Angling_CPUE_data %>%
group_by(Fishing_category)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
max = max(CPUE, na.rm = TRUE),
min=min(CPUE, na.rm = TRUE)
)
##descriptive data on CPUE
#by angler experience
Angling_CPUE_data %>%
group_by(Fishing_category)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
max = max(CPUE, na.rm = TRUE),
min=min(CPUE, na.rm = TRUE)
)
#over all data
Angling_CPUE_data %>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
max = max(CPUE, na.rm = TRUE),
min=min(CPUE, na.rm = TRUE)
)
AnglingClass_size_data %>%
filter(Species!="NA")%>%
group_by(Fishing_category) %>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
max = max(Length, na.rm = TRUE),
min=min(Length, na.rm = TRUE))
#over all data
AnglingClass_size_data%>%
filter(Species!="NA")%>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
max = max(Length, na.rm = TRUE),
min=min(Length, na.rm = TRUE))
## full data set for hoooking depth analysis
AnglingClass_hooking_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
mutate(Date=as.Date(Date))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
#### Statistical analysis ####
## GLMM model
Model_hooking <- glmer(data = AnglingClass_hooking_data,
Hooking_depth ~ Fishing_experience_adjusted * Hook_size +
(1|Year) + (1|Angler_ID) + (1|Spot_ID) + (1|Session_ID) + (1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
#odds_ratio
exp(fixef(Model_hooking))
#### Statistical analysis ####
##Negative binomial distribution model
CPUE_model <- glmmTMB(N_fish~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = nbinom2,
data = Angling_CPUE_data)
#summary statistics
summary(CPUE_model)
Size_model<-lmer(Length~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
data=AnglingClass_size_data)
# summary statistics
summary(Size_model)
#### Statistical analysis ####
## GLMM model
Model_hooking <- glmer(data = AnglingClass_hooking_data,
Hooking_depth ~ Fishing_experience_adjusted * Hook_size +
(1|Year) + (1|Angler_ID) + (1|Spot_ID) + (1|Session_ID) + (1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
#odds_ratio
exp(fixef(Model_hooking))
AnglingClass_bleeding_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
mutate(Date=as.Date(Date))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
#### Statistical analysis ####
## GLMM model
Model_bleeding<-glmer(data=AnglingClass_bleeding_data,
Bleeding~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_bleeding)
#odds_ratio
exp(fixef(Model_bleeding))
#by angler experience
Angling_CPUE_data %>%
group_by(Fishing_category)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
max = max(CPUE, na.rm = TRUE),
min=min(CPUE, na.rm = TRUE)
)
#over all data
Angling_CPUE_data %>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
max = max(CPUE, na.rm = TRUE),
min=min(CPUE, na.rm = TRUE)
)
AnglingClass_size_data %>%
filter(Species!="NA")%>%
group_by(Fishing_category) %>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
max = max(Length, na.rm = TRUE),
min=min(Length, na.rm = TRUE))
#over all data
AnglingClass_size_data%>%
filter(Species!="NA")%>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
max = max(Length, na.rm = TRUE),
min=min(Length, na.rm = TRUE))
CPUE_model <- glmmTMB(N_fish~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = nbinom2,
data = Angling_CPUE_data)
#summary statistics
summary(CPUE_model)
d_1<-Angling_CPUE_data %>% filter(Fishing_category=="Experienced") %>% pull(CPUE)
d_2<-Angling_CPUE_data %>% filter(Fishing_category =="Novice") %>% pull(CPUE)
cohens_d(d_1,d_2)
d1<-AnglingClass_size_data %>% filter(Fishing_category=="Experienced") %>% pull(log_Length)
# Cohens D
d1<-AnglingClass_size_data %>% filter(Fishing_category=="Experienced") %>% pull(Length)
d2<-AnglingClass_size_data %>% filter(Fishing_category =="Novice") %>% pull(Length)
cohens_d(d1,d2)
#effect size
table(AnglingClass_hooking_data$Fishing_category,AnglingClass_hooking_data$Hooking_depth)
ES.h(122/(122+431),279/(279+1084))
#effect size calculation
table(AnglingClass_bleeding_data$Fishing_category,AnglingClass_bleeding_data$Bleeding)
ES.h(112/(112+441),89/(89+1274))
Fig_1
Fig_1
Forplot_Angling_CPUE_data<-Angling_CPUE_data%>%
filter(CPUE!="NA")
Fig_1<-ggplot(Forplot_Angling_CPUE_data,
aes(x =  Fishing_category, y = CPUE, fill =  Fishing_category)) +
# violin plot
geom_violin(
width = 0.8,
alpha = 0.3,
position = position_dodge(0.9),
trim = FALSE)+
# boxplot
geom_boxplot(
width = 0.1,
position = position_dodge(0.9),
outlier.shape = NA,
alpha = 0.4)+
# add jitter points
geom_jitter(
width = 0.05,
size = 1.5,
alpha = 0.3,
color = "black")+
# add mean points
stat_summary(
fun = "mean",
geom = "point",
shape = 23,
size = 3,
color = "black",
fill = "white",
position = position_dodge(0.9)) +
# axis labels
labs(x = "Angling experience",
y = "CPUE (fish/30 min)") +
theme_bw(base_size = 12) +
#custom axis text and titles
theme(
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
legend.position = "none",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"))+
# manual colors for violins
scale_fill_manual(values = c("darkorchid4", "lightyellow2")) +
scale_color_manual(values = c("darkorchid4", "lightyellow2")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## print figures
ggsave("Fig1.png",dpi=900, plot=Fig_1,width=6,height=4)
########## Figure 2 ###################
Fig_2<-ggplot(AnglingClass_size_data, aes(x =  Fishing_category, y = (Length),
fill =  Fishing_category)) +
# Violin plot
geom_violin(
width = 0.8,
alpha = 0.3,
position = position_dodge(0.9),
trim = FALSE
) +
#box plot
geom_boxplot(
width = 0.1,
position = position_dodge(0.9),
outlier.shape = NA,
alpha = 0.4
) +
#Jitter points
geom_jitter(
width = 0.05,
size = 1.5,
alpha = 0.2,
color = "black"
) +
# mean points
stat_summary(
fun = "mean",
geom = "point",
shape = 23,
size = 3,
color = "black",
fill = "white",
position = position_dodge(0.9)
) +
# axis labels
labs(x = "Angling experience",
y = "Total length (mm)") +
theme_bw(base_size = 12) +
theme(
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
scale_fill_manual(values = c("darkorchid4", "lightyellow2")) +
scale_color_manual(values = c("darkorchid4", "lightyellow2")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
##print figure
ggsave("Fig2.png",dpi=900,plot=Fig_2,width=6,height=4)
plot(Fig_2)
plot(Fig_3)
Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
# y axis as percentage
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
# percentage labels
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angling experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
plot(Fig_3)
#print figure
ggsave("Fig3.png",dpi=900, plot=Fig_3,width=6,height=4)
plot(Fig_4)
#print figure
ggsave("Fig4.png",dpi=900,plot=Fig_4,width=6,height=4)
Fig_4<-ggplot(count_data_Bleeding, aes(x = Fishing_category,
fill = Bleeding)) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "No",
"1" = "Yes"),
limits = c("0","1")) +
# y-axis as percentage
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 14) +
#percentage labels
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
#Customize axis labels
xlab("Angler experience") +
ylab("Percent") +
labs(fill = "")+
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"),
legend.title=element_text(size=12))+
guides(fill=guide_legend(title="Bleeding"))
plot(Fig_4)
#print figure
ggsave("Fig4.png",dpi=900,plot=Fig_4,width=6,height=4)
Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
# y axis as percentage
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
# percentage labels
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angler experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
plot(Fig_3)
#print figure
ggsave("Fig3.png",dpi=900, plot=Fig_3,width=6,height=4)
########## Figure 2 ###################
Fig_2<-ggplot(AnglingClass_size_data, aes(x =  Fishing_category, y = (Length),
fill =  Fishing_category)) +
# Violin plot
geom_violin(
width = 0.8,
alpha = 0.3,
position = position_dodge(0.9),
trim = FALSE
) +
#box plot
geom_boxplot(
width = 0.1,
position = position_dodge(0.9),
outlier.shape = NA,
alpha = 0.4
) +
#Jitter points
geom_jitter(
width = 0.05,
size = 1.5,
alpha = 0.2,
color = "black"
) +
# mean points
stat_summary(
fun = "mean",
geom = "point",
shape = 23,
size = 3,
color = "black",
fill = "white",
position = position_dodge(0.9)
) +
# axis labels
labs(x = "Angler experience",
y = "Total length (mm)") +
theme_bw(base_size = 12) +
theme(
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
scale_fill_manual(values = c("darkorchid4", "lightyellow2")) +
scale_color_manual(values = c("darkorchid4", "lightyellow2")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(Fig_2)
##print figure
ggsave("Fig2.png",dpi=900,plot=Fig_2,width=6,height=4)
Fig_1<-ggplot(Forplot_Angling_CPUE_data,
aes(x =  Fishing_category, y = CPUE, fill =  Fishing_category)) +
# violin plot
geom_violin(
width = 0.8,
alpha = 0.3,
position = position_dodge(0.9),
trim = FALSE)+
# boxplot
geom_boxplot(
width = 0.1,
position = position_dodge(0.9),
outlier.shape = NA,
alpha = 0.4)+
# add jitter points
geom_jitter(
width = 0.05,
size = 1.5,
alpha = 0.3,
color = "black")+
# add mean points
stat_summary(
fun = "mean",
geom = "point",
shape = 23,
size = 3,
color = "black",
fill = "white",
position = position_dodge(0.9)) +
# axis labels
labs(x = "Angler experience",
y = "CPUE (fish/30 min)") +
theme_bw(base_size = 12) +
#custom axis text and titles
theme(
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
legend.position = "none",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"))+
# manual colors for violins
scale_fill_manual(values = c("darkorchid4", "lightyellow2")) +
scale_color_manual(values = c("darkorchid4", "lightyellow2")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## print figures
ggsave("Fig1.png",dpi=900, plot=Fig_1,width=6,height=4)
```
