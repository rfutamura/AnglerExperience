aes(x =  Fishing_category, y = CPUE, fill =  Fishing_category)) +
# Violin plot (distribution of data)
geom_violin(
width = 0.8,
alpha = 0.3,
position = position_dodge(0.9),
trim = FALSE)+
# Add boxplot (summary statistics)
geom_boxplot(
width = 0.1,
position = position_dodge(0.9),
outlier.shape = NA,
alpha = 0.4)+
# Add jittered points (actual data points)
geom_jitter(
width = 0.05,
size = 1.5,
alpha = 0.3,
color = "black")+
# Add mean points
stat_summary(
fun = "mean",
geom = "point",
shape = 23,
size = 3,
color = "black",
fill = "white",
position = position_dodge(0.9)) +
# Axis labels
labs(x = "Fishing Experience",
y = "CPUE in 30 minutes") +
# Publication
theme_bw(base_size = 12) +
# Customize axis text and titles
theme(
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
legend.position = "none",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"))+
# Manually set fill colors for violins
scale_fill_manual(values = c("orange", "mediumorchid1")) +
scale_color_manual(values = c("orange", "mediumorchid1")) +
# Add cleaner gridlines
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Cohen"s D
d1<-AnglingClass_size_data %>% filter(Fishing_category=="Experienced") %>% pull(log_Length)
d2<-AnglingClass_size_data %>% filter(Fishing_category =="Novice") %>% pull(log_Length)
cohens_d(d1,d2)
ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_viridis()+
# scale_fill_manual(values = c("No" = "white", "Yes" = "grey60"),
#                   labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
# scale_fill_manual(values = c("No" = "white", "Yes" = "grey60"),
#                   labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "lightskyblue", "Yes" = "royalblue"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "steelblue", "Yes" = "royalblue4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
Fig_S1<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "steelblue1", "Yes" = "royalblue4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
ggsave("FigS1.pdf",plot=Fig_S1,width=6,height=4)
-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "steelblue1", "Yes" = "royalblue4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "steelblue1", "Yes" = "royalblue4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
Fig_S1<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "steelblue1", "Yes" = "royalblue4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
Fig_S1
Fig_S1<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "steelblue1", "Yes" = "royalblue4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
Fig_S1
ggsave("FigS1.pdf",plot=Fig_S1,width=6,height=4)
ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "coral", "Yes" = "firebrick4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "tan1", "Yes" = "firebrick4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
ggsave("FigS1.pdf",plot=Fig_S1,width=6,height=4)
Fig_S1<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "tan1", "Yes" = "firebrick4"),
labels = c("No" = "Not Bleeding", "Yes" = "Bleeding")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 12) +
# Customize axis labels
theme(
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
legend.position = "right"
)
ggsave("FigS1.pdf",plot=Fig_S1,width=6,height=4)
Fig_S1
chisq.test(table(AnglingClass_data$Bleeding,
AnglingClass_data$Hooking_depth))
contingency_df <- as.data.frame(contingency_table)
colnames(contingency_df) <- c("Bleeding", "Hooking_depth", "Count")
View(contingency_df)
ggplot(Spp_summary, aes(x = "", y = prop, fill = Species)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
facet_wrap(. ~ Fishing_category) +
theme_void() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.position = "right",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10)
) +
scale_fill_manual(values = palette)
SppComposition<-ggplot(Spp_summary, aes(x = "", y = prop, fill = Species)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
facet_wrap(. ~ Fishing_category) +
theme_void() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.position = "right",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10)
)
ggplot(Spp_summary, aes(x = "", y = prop, fill = Species)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
facet_wrap(. ~ Fishing_category) +
theme_void() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.position = "right",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10)
)
Fig_1_SppComposition<-ggplot(Spp_summary, aes(x = "", y = prop, fill = Species)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
facet_wrap(. ~ Fishing_category) +
theme_void() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
legend.position = "right",
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10)
) +
scale_fill_manual(values = palette)
Count_data_hooking_depth <- AnglingClass_hooking_data%>%
mutate(Treatment_Experience_Hooking =
interaction(Fishing_category, as.factor(Hooking_depth)))%>%
group_by(Fishing_category, Treatment_Experience_Hooking) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Fishing_category) %>%
mutate(percent = count / sum(count))
View(Count_data_hooking_depth)
122+431
122/553
122/553
279+1084
279/1363
count_data_Bleeding <- AnglingClass_bleeding_data%>%
mutate(Treatment_Experience_Bleeding =
interaction(Fishing_category, as.factor(Bleeding)))%>%
group_by(Fishing_category,Treatment_Experience_Bleeding) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Fishing_category) %>%
mutate(percent = count / sum(count))
View(count_data_Bleeding)
279/1363
112+441
89+1274
89+1274
89/1383
89/1383
## Read the data set of individual level analysis
AnglingClass_bleeding_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
##################figure ##############################
# Calculate counts and percentages
count_data_Bleeding <- AnglingClass_bleeding_data%>%
mutate(Treatment_Experience_Bleeding =
interaction(Fishing_category, as.factor(Bleeding)))%>%
group_by(Fishing_category,Treatment_Experience_Bleeding) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Fishing_category) %>%
mutate(percent = count / sum(count))
ggplot(count_data_Bleeding, aes(x = Fishing_category,
fill = Treatment_Experience_Bleeding)) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("Experienced.0" = "peachpuff",
"Experienced.1" = "darkorange1",
"Novice.0" = "plum1",
"Novice.1" = "darkorchid"),
labels = c("Experienced.0" = "No Bleeding",
"Experienced.1" = "Bleeding",
"Novice.0" = "No Bleeding",
"Novice.1" = "Bleeding"),
limits = c("Experienced.0", "Experienced.1",
"Novice.0", "Novice.1")) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 14) +
#Add percentage labels inside the bars
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
#Customize axis labels
xlab("Angling Experience") +
ylab("Percent") +
#Remove legend title
labs(fill = "")+
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 10)),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title = element_text(face = "bold", size = 10),
axis.text = element_text(size = 10),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"))
# Calculate counts and percentages
count_data_Bleeding <- AnglingClass_bleeding_data%>%
mutate(Treatment_Experience_Bleeding =
interaction(Fishing_category, as.factor(Bleeding)))%>%
group_by(Fishing_category,Treatment_Experience_Bleeding) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(Fishing_category) %>%
mutate(percent = count / sum(count))
View(count_data_Bleeding)
setwd("C:/Users/rfuta/OneDrive/研究/Germany/Analysis/AnglingClass/git")
##read needed packages
pacman::p_load(tidyverse,ggdist,readr,lmerTest,ggplotgui,car,performance,glmmTMB,readxl,scales,vegan, rstatix, ggsci,viridis, RColorBrewer,effectsize)
#odds_ratio
exp(fixef(Model_bleeding))
# 95%CI
conf_int <- confint(Model_bleeding, parm = "beta_", level = 0.95) # パラメータの信頼区間
# 95%CI
conf_int <- confint(Model_bleeding, parm = "beta_", level = 0.95) # パラメータの信頼区間
# 95%CI
conf_int <- confint(Model_bleeding, parm = "beta_", level = 0.95) # パラメータの信頼区間
exp(fixef(Model_bleeding))
#summary statistics
summary(Model_bleeding)
#Anova(Model_bleeding)
#odds_ratio
exp(fixef(Model_bleeding))
#summary statistics
summary(Model_hooking)
#Anova(Sub_model_hooking)
#odds_ratio
exp(fixef(Model_hooking))
#### Statistical analysis ####
Model_bleeding<-glmer(data=AnglingClass_bleeding_data,
Bleeding~Hook_size*Fishing_experience_adjusted+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_bleeding)
#### Statistical analysis ####
Model_hooking<-glmer(data=AnglingClass_hooking_data,
Hooking_depth~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
exp(fixef(Model_hooking))
#### Statistical analysis ####
Model_bleeding<-glmer(data=AnglingClass_bleeding_data,
Bleeding~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_bleeding)
#### Statistical analysis ####
Model_bleeding<-glmer(data=AnglingClass_bleeding_data,
Bleeding~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_bleeding)
exp(fixef(Model_bleeding))
setwd("C:/Users/rfuta/OneDrive/研究/Germany/Analysis/AnglingClass/git")
##read needed packages
pacman::p_load(tidyverse,ggdist,readr,lmerTest,ggplotgui,car,performance,glmmTMB,readxl,scales,vegan, rstatix, ggsci,viridis, RColorBrewer,effectsize)
## full data set for hoooking depth analysis
AnglingClass_hooking_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
#### Statistical analysis ####
Model_hooking<-glmer(data=AnglingClass_hooking_data,
Hooking_depth~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
#Anova(Sub_model_hooking)
exp(fixef(Model_hooking))
