ylab("Percent") +
#Remove legend title
labs(fill = "")+
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 10)),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title = element_text(face = "bold", size = 10),
axis.text = element_text(size = 10),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"))
Fig_4<-ggplot(count_data_Bleeding, aes(x = Fishing_category,
fill = Bleeding)) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "No",
"1" = "Yes"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 14) +
#Add percentage labels inside the bars
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
#Customize axis labels
xlab("Angling Experience") +
ylab("Percent") +
#Remove legend title
labs(fill = "")+
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"),
legend.title=element_text(size=12))+
guides(fill=guide_legend(title="Bleeding"))
ggsave("Fig4.pdf",plot=Fig_4,width=6,height=4)
Fig_5
Fig_4<-ggplot(count_data_Bleeding, aes(x = Fishing_category,
fill = Bleeding)) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "No",
"1" = "Yes"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 14) +
#Add percentage labels inside the bars
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
#Customize axis labels
xlab("Angling Experience") +
ylab("Percent") +
#Remove legend title
labs(fill = "")+
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"),
legend.title=element_text(size=12))+
guides(fill=guide_legend(title="Bleeding"))
ggsave("Fig4.pdf",plot=Fig_4,width=6,height=4)
# Plot the contingency table using ggplot with percentages
Fig_5<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "lemonchiffon", "Yes" = "steelblue3"),
labels = c("No" = "No", "Yes" = "Yes")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 14) +
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"),
legend.title=element_text(size=12))+
guides(fill=guide_legend(title="Bleeding"))
ggsave("Fig5.pdf",plot=Fig_5,width=6,height=4)
## Calculate percentage for each treatment
Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "khaki",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angling Experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
ggsave("Fig3.pdf",plot=Fig_4,width=6,height=4)
Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "khaki",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angling Experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
ggsave("Fig3.pdf",plot=Fig_4,width=6,height=4)
ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "khaki",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angling Experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
ggsave("Fig3.pdf",plot=Fig_3,width=6,height=4)
ggsave("Fig3.pdf",plot=Fig_3,width=6,height=4)
## Calculate percentage for each treatment
Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angling Experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
ggsave("Fig3.pdf",plot=Fig_3,width=6,height=4)
## Calculate percentage for each treatment
Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category,
fill = as.factor(Hooking_depth))) +
geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +
scale_fill_manual(values = c("0" = "lemonchiffon",
"1" = "steelblue4"),
labels = c("0" = "Shallow",
"1" = "Deep"),
limits = c("0","1")) +
scale_y_continuous(labels = scales::percent_format()) +
scale_y_continuous(labels = scales::percent_format()) +
theme_classic(base_size = 12) +
geom_text(aes(y = percent,
label = scales::percent(percent, accuracy = 1)),
position = position_fill(vjust = 0.5),
size = 3) +
xlab("Angling Experience") +
ylab("Percent") +
theme(
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "right",
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm")
)+
guides(fill=guide_legend(title="Hooking"))+
labs(fill = "")
ggsave("Fig3.pdf",plot=Fig_3,width=6,height=4)
# Plot the contingency table using ggplot with percentages
Fig_5<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
# Stacked bar plot
geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
# Colors for "Bleeding"
scale_fill_manual(values = c("No" = "lemonchiffon", "Yes" = "steelblue4"),
labels = c("No" = "No", "Yes" = "Yes")) +
# Labels
labs(x = "Hooking Depth", y = "Percentage", fill = "Bleeding") +
# y-axis as percent format
scale_y_continuous(labels = scales::percent_format(scale = 100)) +
# Percentage labels inside the bars
geom_text(aes(label = paste0(round(Percent, 1), "%")),
position = position_fill(vjust = 0.5),
size = 3) +
# Theme adjustments
theme_classic(base_size = 14) +
theme(
legend.position = "right",
axis.title.y = element_text(margin = margin(r = 12)),
axis.title.x = element_text(margin = margin(t = 12)),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"),
panel.spacing = unit(1, "lines"),
plot.margin = margin(1, 1, 1, 1, "cm"),
legend.title=element_text(size=12))+
guides(fill=guide_legend(title="Bleeding"))
ggsave("Fig5.pdf",plot=Fig_5,width=6,height=4)
setwd("C:/Users/rfuta/OneDrive/研究/Germany/Analysis/AnglingClass/git")
##read needed packages
pacman::p_load(tidyverse,ggdist,readr,lmerTest,ggplotgui,car,performance,glmmTMB,readxl,scales, rstatix, ggsci,viridis, RColorBrewer,effectsize,perfomance, pwr)
## Read the data set of individual level
AnglingClass_data <- read_xlsx("AnglingClass_finaldata.xlsx",sheet=1)%>%
mutate(Date=as.Date(Date))%>%
mutate(log_Length=log(Length),
Hooking_depth=case_when(Hooking_depth=="Verydeep"~1,
Hooking_depth=="Deep"~1,
Hooking_depth=="Shallow"~0,
FALSE~NA))%>%
mutate(Bleeding=case_when(Bleeding=="YES"~1,
Bleeding=="NO"~0,
FALSE~NA))
Species_data<-AnglingClass_data%>%
filter(Species!="NA")%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
# remove days when Hook type is not normalized.
################ statistical analysis #############################
#table of the species composition
table(Species_data$Fishing_category,Species_data$Species)
#chi-square tests to test the annual difference in species composition
chisq.test(table(Species_data$Fishing_category,
Species_data$Species))
Angling_CPUE_data <- read_xlsx("AnglingClass_finaldata.xlsx",sheet=2)%>%
mutate(Session_ID=as.numeric(Session_ID),
Date=as.Date(Date))%>%
filter(!Date %in% ymd(c("2020-09-02",
"2020-09-03"))) #remove days with same hook
##descriptive data
#by angler experience
Angling_CPUE_data %>%
group_by(Fishing_category)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
#over all data
Angling_CPUE_data %>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
Angling_CPUE_data %>%
group_by(year)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
Angling_CPUE_data %>%
group_by(Year)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
#by angler experience
Angling_CPUE_data %>%
group_by(Fishing_category)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
#over all data
Angling_CPUE_data %>%
#group_by(Year)%>%
summarise(
n = n(),
mean = mean(CPUE, na.rm = TRUE),
sd = sd(CPUE, na.rm = TRUE),
median = median(CPUE, na.rm = TRUE),
range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
)
##descriptive data
#by angler experience
AnglingClass_size_data %>%
filter(Species!="NA")%>%
group_by(Fishing_category) %>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
range = max(Length, na.rm = TRUE) - min(Length, na.rm = TRUE)
)
#over all data
AnglingClass_size_data%>%
filter(Species!="NA")%>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
range = max(Length, na.rm = TRUE) - min(Length, na.rm = TRUE)
)
# Result model
Model_hooking <- glmer(data = AnglingClass_hooking_data,
Hooking_depth ~ Fishing_experience_adjusted * Hook_size +
(1|Year) + (1|Angler_ID) + (1|Spot_ID) + (1|Session_ID) + (1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
#Anova(Sub_model_hooking)
#odds_ratio
exp(fixef(Model_hooking))
##Negative binomial distribution sub model
CPUE_model <- glmmTMB(N_fish~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = nbinom2,
data = Angling_CPUE_data)
#sumamary statistics
summary(CPUE_model)
d_1<-Angling_CPUE_data %>% filter(Fishing_category=="Experienced") %>% pull(CPUE)
d_2<-Angling_CPUE_data %>% filter(Fishing_category =="Novice") %>% pull(CPUE)
cohens_d(d_1,d_2)
#by angler experience
AnglingClass_size_data %>%
filter(Species!="NA")%>%
group_by(Fishing_category) %>%
select(Fishing_category,Length)%>%
summarise(
n = n(),
mean = mean(Length, na.rm = TRUE),
sd = sd(Length, na.rm = TRUE),
median = median(Length, na.rm = TRUE),
range = max(Length, na.rm = TRUE) - min(Length, na.rm = TRUE)
)
View(AnglingClass_size_data)
ze analysis
View(AnglingClass_data)
##sub model for size analysis
Size_model<-lmer(Length~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
data=AnglingClass_size_data)
## Summary statistics
summary(Size_model)
## full data set for hoooking depth analysis
AnglingClass_hooking_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
mutate(Date=as.Date(Date))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
#### Statistical analysis ####
# Result model
Model_hooking <- glmer(data = AnglingClass_hooking_data,
Hooking_depth ~ Fishing_experience_adjusted * Hook_size +
(1|Year) + (1|Angler_ID) + (1|Spot_ID) + (1|Session_ID) + (1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
#effect size calculation
table(AnglingClass_hooking_data$Fishing_category,AnglingClass_hooking_data$Hooking_depth)
ES.h(122/(122+431),279/(279+1084))
#summary statistics
summary(Model_hooking)
#Anova(Sub_model_hooking)
#odds_ratio
exp(fixef(Model_hooking))
AnglingClass_hooking_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
mutate(Date=as.Date(Date))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
#### Statistical analysis ####
# Result model
Model_hooking <- glmer(data = AnglingClass_hooking_data,
Hooking_depth ~ Fishing_experience_adjusted * Hook_size +
(1|Year) + (1|Angler_ID) + (1|Spot_ID) + (1|Session_ID) + (1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_hooking)
#Anova(Sub_model_hooking)
#odds_ratio
AnglingClass_bleeding_data <-AnglingClass_data%>%
filter(!is.na(Bleeding))%>%
mutate(Date=as.Date(Date))%>%
filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))
#### Statistical analysis ####
Model_bleeding<-glmer(data=AnglingClass_bleeding_data,
Bleeding~Fishing_experience_adjusted*Hook_size+
(1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
family = binomial(link = "logit"))
#summary statistics
summary(Model_bleeding)
#odds_ratio
exp(fixef(Model_bleeding))
#####statistical analysis on the relationship betwween two factors###
chisq.test(table(AnglingClass_data$Bleeding,
AnglingClass_data$Hooking_depth))
########### figure ################
# Contingency table for Bleeding and Hooking_depth
contingency_table <- table(AnglingClass_data$Bleeding, AnglingClass_data$Hooking_depth)
# Contingency table to a data frame for ggplot
contingency_df <- as.data.frame(contingency_table)
colnames(contingency_df) <- c("Bleeding", "Hooking_depth", "Count")
#effect size calculation
table(AnglingClass_data$Hooking_depth,
AnglingClass_data$Bleeding)
## Summary statistics
summary(Size_model)
#sumamary statistics
summary(CPUE_model)
d_1<-Angling_CPUE_data %>% filter(Fishing_category=="Experienced") %>% pull(CPUE)
d_2<-Angling_CPUE_data %>% filter(Fishing_category =="Novice") %>% pull(CPUE)
cohens_d(d_1,d_2)
setwd("C:/Users/rfuta/OneDrive/研究/Germany/Analysis/AnglingClass/git")
##read needed packages
pacman::p_load(tidyverse,ggdist,readr,lmerTest,ggplotgui,car,performance,glmmTMB,readxl,scales, rstatix, ggsci,viridis, RColorBrewer,effectsize,perfomance, pwr)
ES.h(156/(156+424),125/(125+1716))
