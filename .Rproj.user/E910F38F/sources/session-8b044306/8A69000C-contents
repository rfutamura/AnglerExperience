---
title: "StudentCourse2024"
author: "Ryo FUTAMURA"
date: "2024-09-20"
output:
  html_document:
    code_folding: hide
    theme: united
    toc: yes
    toc_float: yes
always_allow_html: yes
---


```{r setup, warning=FALSE,message=FALSE}
setwd("C:/Users/rfuta/OneDrive/研究/Germany/Analysis/AnglingClass/git")

##read needed packages
pacman::p_load(tidyverse,ggdist,readr,lmerTest,ggplotgui,car,performance,glmmTMB,readxl,scales, rstatix, ggsci,viridis, RColorBrewer,effectsize,perfomance, pwr)
```

# data preaparation CPUE
```{r data preparation individual-level data to CPUE data, warning=FALSE,message=FALSE}
## Read the data set of individual level
AnglingClass_data <- read_xlsx("AnglingExp_script.xlsx",sheet=1)%>%
   mutate(Date=as.Date(Date))%>%
   mutate(Hooking_depth=case_when(Hooking_depth=="Verydeep"~1,
                                                             Hooking_depth=="Deep"~1,
                                                             Hooking_depth=="Shallow"~0,
                                                        FALSE~NA))%>%  #recode hooking depth
                        mutate(Bleeding=case_when(Bleeding=="YES"~1,
                                                        Bleeding=="NO"~0,
                                                        FALSE~NA)) #recode bleeding
```

# Descriptive data on species composition
```{r species composition, warning=FALSE,message=FALSE}

Species_data<-AnglingClass_data%>%
            filter(Species!="NA")%>%
            filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03"))) #exclude days with same hook

################ statistical analysis #############################
#table of the species composition
table(Species_data$Fishing_category,Species_data$Species)


#chi-square tests to test the annual difference in species composition
chisq.test(table(Species_data$Fishing_category,
                Species_data$Species))

```

# CPUE analysis 
```{r CPUE Analysis, warning=FALSE,message=FALSE}
## data set of CPUE
Angling_CPUE_data <- read_xlsx("AnglingExp_script.xlsx",sheet=2)%>%
                    mutate(Session_ID=as.numeric(Session_ID),
                           Date=as.Date(Date))%>%
                    filter(!Date %in% ymd(c("2020-09-02", 
                                            "2020-09-03"))) #exclude days with same hook size 

##descriptive data on CPUE
#by angler experience
Angling_CPUE_data %>%
  group_by(Fishing_category)%>%
  summarise(
    n = n(),
    mean = mean(CPUE, na.rm = TRUE),
    sd = sd(CPUE, na.rm = TRUE),
    median = median(CPUE, na.rm = TRUE),
    range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
  )

#over all data
Angling_CPUE_data %>%
  summarise(
    n = n(),
    mean = mean(CPUE, na.rm = TRUE),
    sd = sd(CPUE, na.rm = TRUE),
    median = median(CPUE, na.rm = TRUE),
    range = max(CPUE, na.rm = TRUE) - min(CPUE, na.rm = TRUE)
  )



#### Statistical analysis ####
##Negative binomial distribution model
CPUE_model <- glmmTMB(N_fish~Fishing_experience_adjusted*Hook_size+
                             (1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
                             family = nbinom2, 
                             data = Angling_CPUE_data)
#summary statistics
summary(CPUE_model)

#effect size
d_1<-Angling_CPUE_data %>% filter(Fishing_category=="Experienced") %>% pull(CPUE)
d_2<-Angling_CPUE_data %>% filter(Fishing_category =="Novice") %>% pull(CPUE)               
cohens_d(d_1,d_2)


################ figure 1 #############################
# Create violin plot
Forplot_Angling_CPUE_data<-Angling_CPUE_data%>%
  filter(CPUE!="NA")

Fig_1<-ggplot(Forplot_Angling_CPUE_data, 
              aes(x =  Fishing_category, y = CPUE, fill =  Fishing_category)) +
  # violin plot
  geom_violin(
    width = 0.8,       
    alpha = 0.3,       
    position = position_dodge(0.9),  
    trim = FALSE)+
  # boxplot
  geom_boxplot(
    width = 0.1,       
    position = position_dodge(0.9), 
    outlier.shape = NA, 
    alpha = 0.4)+
  
  # add jitter points
  geom_jitter(
    width = 0.05,       
    size = 1.5,        
    alpha = 0.3,       
    color = "black")+
  # add mean points
  stat_summary(
    fun = "mean",      
    geom = "point",    
    shape = 23,        
    size = 3,          
    color = "black",   
    fill = "white",   
    position = position_dodge(0.9)) +
  # axis labels
  labs(x = "Angling experience", 
       y = "CPUE in 30 minutes") +
  theme_bw(base_size = 12) +  
  #custom axis text and titles
  theme(
    axis.title.y = element_text(margin = margin(r = 8)),
    axis.title.x = element_text(margin = margin(t = 8)),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 12),
    strip.text = element_text(size = 12, face = "bold"),  
    plot.title = element_text(hjust = 0.5, size = 12, face = "bold"), 
    legend.position = "none",
    panel.spacing = unit(1, "lines"),  
    plot.margin = margin(1, 1, 1, 1, "cm"))+
  # manual colors for violins
  scale_fill_manual(values = c("darkorchid4", "lightyellow2")) +
  scale_color_manual(values = c("darkorchid4", "lightyellow2")) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())


## print figures
ggsave("Fig1.pdf",plot=Fig_1,width=6,height=4)
```

# Descriptive data on fish size
```{r individual level analysis (Fish size), warning=FALSE,message=FALSE}

##data set for size analysis
AnglingClass_size_data <-AnglingClass_data%>%
                      filter(!Date %in%  
                               ymd(c("2020-09-02", "2020-09-03"))) #exclude days with same hook 

########## descriptive data ##########
#by angler experience
AnglingClass_size_data %>%
 filter(Species!="NA")%>%
  group_by(Fishing_category) %>%
  select(Fishing_category,Length)%>%
  summarise(
    n = n(),
    mean = mean(Length, na.rm = TRUE),
    sd = sd(Length, na.rm = TRUE),
    median = median(Length, na.rm = TRUE),
    range = max(Length, na.rm = TRUE) - min(Length, na.rm = TRUE))

#over all data
AnglingClass_size_data%>%
 filter(Species!="NA")%>%
  select(Fishing_category,Length)%>%
  summarise(
    n = n(),
    mean = mean(Length, na.rm = TRUE),
    sd = sd(Length, na.rm = TRUE),
    median = median(Length, na.rm = TRUE),
    range = max(Length, na.rm = TRUE) - min(Length, na.rm = TRUE))



####### Statistical analysis ############
## GLMM model
Size_model<-lmer(Length~Fishing_experience_adjusted*Hook_size+
                             (1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
                      data=AnglingClass_size_data)

# summary statistics
summary(Size_model)

# Cohens D 
d1<-AnglingClass_size_data %>% filter(Fishing_category=="Experienced") %>% pull(log_Length)
d2<-AnglingClass_size_data %>% filter(Fishing_category =="Novice") %>% pull(log_Length)               
cohens_d(d1,d2)


########## Figure 2 ###################
Fig_2<-ggplot(AnglingClass_size_data, aes(x =  Fishing_category, y = (Length),
                                          fill =  Fishing_category)) +
  # Violin plot
  geom_violin(
    width = 0.8,       
    alpha = 0.3,       
    position = position_dodge(0.9),  
    trim = FALSE       
  ) +
#box plot 
  geom_boxplot(
    width = 0.1,       
    position = position_dodge(0.9),  
    outlier.shape = NA,  
    alpha = 0.4
  ) +
#Jitter points 
  geom_jitter(
    width = 0.05,      
    size = 1.5,        
    alpha = 0.2,       
    color = "black"  
  ) +
# mean points
  stat_summary(
    fun = "mean",      
    geom = "point",    
    shape = 23,        
    size = 3,          
    color = "black",   
    fill = "white",   
    position = position_dodge(0.9)  
  ) +
# axis labels
  labs(x = "Angling experience", 
       y = "Total length (mm)") +
  theme_bw(base_size = 12) +  
  theme(
    axis.title.y = element_text(margin = margin(r = 8)),
    axis.title.x = element_text(margin = margin(t = 8)),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 12),
    strip.text = element_text(size = 12, face = "bold"),  
    legend.position = "none",
    panel.spacing = unit(1, "lines"),  
    plot.margin = margin(1, 1, 1, 1, "cm")  
  )+
  scale_fill_manual(values = c("darkorchid4", "lightyellow2")) +
  scale_color_manual(values = c("darkorchid4", "lightyellow2")) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())


##print figure
ggsave("Fig2.pdf",plot=Fig_2,width=6,height=4)
```

#Analysis and plot for Hypothesis 2 and 4
```{r individual level analysis (hook depth), warning=FALSE,message=FALSE}

## full data set for hoooking depth analysis 
AnglingClass_hooking_data <-AnglingClass_data%>%
                            filter(!is.na(Bleeding))%>%
                            mutate(Date=as.Date(Date))%>%
                            filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))

             
#### Statistical analysis ####
## GLMM model
Model_hooking <- glmer(data = AnglingClass_hooking_data,
                       Hooking_depth ~ Fishing_experience_adjusted * Hook_size +
                         (1|Year) + (1|Angler_ID) + (1|Spot_ID) + (1|Session_ID) + (1|Date_ID),
                       family = binomial(link = "logit"))

#summary statistics
summary(Model_hooking)
#odds_ratio
exp(fixef(Model_hooking))

#effect size
table(AnglingClass_hooking_data$Fishing_category,AnglingClass_hooking_data$Hooking_depth)
ES.h(122/(122+431),279/(279+1084))


########### figure 3 ################
#prepare summarized data for figure
Count_data_hooking_depth <- AnglingClass_hooking_data%>%
  mutate(Treatment_Experience_Hooking =
           interaction(Fishing_category, as.factor(Hooking_depth)))%>%
  group_by(Fishing_category, Treatment_Experience_Hooking,Hooking_depth) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(Fishing_category) %>%
  mutate(percent = count / sum(count),
         Hooking_depth=as.factor(Hooking_depth))  


Fig_3<-ggplot(Count_data_hooking_depth, aes(x = Fishing_category, 
                                      fill = as.factor(Hooking_depth))) +  
  geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") + 
  scale_fill_manual(values = c("0" = "lemonchiffon", 
                                "1" = "steelblue4"), 
                    labels = c("0" = "Shallow", 
                               "1" = "Deep"),
                    limits = c("0","1")) +
# y axis as percentage
  scale_y_continuous(labels = scales::percent_format()) +
  theme_classic(base_size = 12) +
# percentage labels
  geom_text(aes(y = percent,  
                label = scales::percent(percent, accuracy = 1)), 
            position = position_fill(vjust = 0.5),  
            size = 3) + 
  xlab("Angling experience") +
  ylab("Percent") +
  theme(
    axis.title.y = element_text(margin = margin(r = 12)),
    axis.title.x = element_text(margin = margin(t = 12)),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 12),
    strip.text = element_text(size = 12, face = "bold"),  
    legend.position = "right",
    panel.spacing = unit(1, "lines"),  
    plot.margin = margin(1, 1, 1, 1, "cm")  
    )+
  guides(fill=guide_legend(title="Hooking"))+
  labs(fill = "")

#print figure
ggsave("Fig3.pdf",plot=Fig_3,width=6,height=4)
```

```{r individual level analysis (Bleeding), warning=FALSE,message=FALSE}
## Read the data set of individual level analysis
AnglingClass_bleeding_data <-AnglingClass_data%>%
                        filter(!is.na(Bleeding))%>%
                        mutate(Date=as.Date(Date))%>%
                        filter(!Date %in%  ymd(c("2020-09-02", "2020-09-03")))


#### Statistical analysis ####
## GLMM model
Model_bleeding<-glmer(data=AnglingClass_bleeding_data,
                      Bleeding~Fishing_experience_adjusted*Hook_size+
                                (1|Year)+(1|Angler_ID)+(1|Spot_ID)+(1|Session_ID)+(1|Date_ID),
                                family = binomial(link = "logit"))

#summary statistics
summary(Model_bleeding)

#odds_ratio
exp(fixef(Model_bleeding))

#effect size calculation
table(AnglingClass_bleeding_data$Fishing_category,AnglingClass_bleeding_data$Bleeding)
ES.h(112/(112+441),89/(89+1274))


################## figure 4 ##############################

##prepare summarized data for figure
count_data_Bleeding <- AnglingClass_bleeding_data%>%
  mutate(Treatment_Experience_Bleeding =
           interaction(Fishing_category, as.factor(Bleeding)))%>%
  group_by(Fishing_category,Treatment_Experience_Bleeding, Bleeding) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(Fishing_category) %>%
  mutate(percent = count / sum(count),
         Bleeding=as.factor(Bleeding)) 


Fig_4<-ggplot(count_data_Bleeding, aes(x = Fishing_category, 
                                      fill = Bleeding)) +  
  geom_col(aes(y = percent), position = "fill", alpha = 0.7, color = "black") +  
  scale_fill_manual(values = c("0" = "lemonchiffon", 
                                "1" = "steelblue4"), 
                    labels = c("0" = "No", 
                               "1" = "Yes"),
                    limits = c("0","1")) +
# y-axis as percentage
  scale_y_continuous(labels = scales::percent_format()) +
  theme_classic(base_size = 14) +
#percentage labels
  geom_text(aes(y = percent,
                label = scales::percent(percent, accuracy = 1)), 
            position = position_fill(vjust = 0.5),  
            size = 3) +
#Customize axis labels
  xlab("Angling experience") +
  ylab("Percent") +
  labs(fill = "")+
  theme(
    legend.position = "right",
    axis.title.y = element_text(margin = margin(r = 12)),
    axis.title.x = element_text(margin = margin(t = 12)),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 12),
    strip.text = element_text(size = 10, face = "bold"), 
    panel.spacing = unit(1, "lines"),  
    plot.margin = margin(1, 1, 1, 1, "cm"),
    legend.title=element_text(size=12))+
  guides(fill=guide_legend(title="Bleeding"))


#print figure
ggsave("Fig4.pdf",plot=Fig_4,width=6,height=4)

```



```{r relationship between bleeding and depth}
#effect size calculation
table(AnglingClass_data$Hooking_depth, 
      AnglingClass_data$Bleeding)

ES.h(156/(156+424),125/(125+1716))


#####statistical analysis on the relationship betwween two factors###
chisq.test(table(AnglingClass_data$Bleeding,
                         AnglingClass_data$Hooking_depth))

########### figure 5################
# Contingency table for Bleeding and Hooking_depth
contingency_table <- table(AnglingClass_data$Bleeding, AnglingClass_data$Hooking_depth)

# Contingency table to a data frame for ggplot
contingency_df <- as.data.frame(contingency_table)
colnames(contingency_df) <- c("Bleeding", "Hooking_depth", "Count")

# Recode 0/1 as No/Yes for Bleeding and Hooking_depth
contingency_df$Bleeding <- factor(contingency_df$Bleeding, levels = c(0, 1), labels = c("No", "Yes"))
contingency_df$Hooking_depth <- factor(contingency_df$Hooking_depth, levels = c(0, 1), labels = c("Shallow", "Deep"))

# Calculate percentage within each Hooking_depth group
contingency_df <- contingency_df %>%
  group_by(Hooking_depth) %>%
  mutate(Percent = Count / sum(Count) * 100)  

  

Fig_5<-ggplot(contingency_df, aes(x = Hooking_depth, y = Percent, fill = Bleeding)) +
    # Stacked bar plot
    geom_bar(stat = "identity", position = "fill", color = "black", alpha = 0.7) +
    scale_fill_manual(values = c("No" = "lemonchiffon", "Yes" = "steelblue4"),
                    labels = c("No" = "No", "Yes" = "Yes")) +
    labs(x = "Hooking depth", y = "Percentage", fill = "Bleeding") +
    # y-axis as percent
    scale_y_continuous(labels = scales::percent_format(scale = 100)) +
    # percentage labels
    geom_text(aes(label = paste0(round(Percent, 1), "%")), 
              position = position_fill(vjust = 0.5), 
              size = 3) +
    theme_classic(base_size = 14) +
  theme(
    legend.position = "right",
    axis.title.y = element_text(margin = margin(r = 12)),
    axis.title.x = element_text(margin = margin(t = 12)),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 12),
    strip.text = element_text(size = 10, face = "bold"), 
    panel.spacing = unit(1, "lines"),  
    plot.margin = margin(1, 1, 1, 1, "cm"),
    legend.title=element_text(size=12))+
  guides(fill=guide_legend(title="Bleeding"))
  
#print figure
ggsave("Fig5.pdf",plot=Fig_5,width=6,height=4)
```
